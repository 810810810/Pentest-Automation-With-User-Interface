#!/bin/bash

echo "============================================="
echo "        Welcome to the Penetration Station       "
echo "============================================="
echo "Enter the target to scan: "
read target
echo "============================================="

# Run nmap scan on the target
echo "Scanning $target for open ports..."
nmap_output=$(nmap -p- --min-rate=1000 -T4 $target)
open_ports=$(echo "$nmap_output" | grep "open" | cut -d '/' -f 1 | awk '{print $NF}')

if [ -z "$open_ports" ]; then
  echo "No open ports found on target"
  exit 1
fi

echo "Open ports found: $open_ports"
echo "============================================="

# Select scan type
echo "Select the type of scan to perform:"
PS3="Enter the number of your choice: "
options=("1) Basic - Only scan for open ports and directories" "2) Comprehensive - Scan for open ports, directories, and vulnerabilities")
select scan_type in "${options[@]}"; do
if [ -z "$scan_type" ]; then
echo "Invalid option. Please try again."
else
break
fi
done
echo "============================================="

if [ "$scan_type" == "Comprehensive" ]; then
  # Run vulnerability scan with Nessus
  echo "Running vulnerability scan with Nessus..."
  nessus_output=$(nessus $target)
  vulnerabilities=$(echo "$nessus_output" | grep "Vulnerability" | awk '{print $2}')

  if [ -z "$vulnerabilities" ]; then
    echo "No vulnerabilities found"
  else
    echo "Vulnerabilities found: $vulnerabilities"
  fi
  echo "============================================="

  # Scan for subdomains with sublist3r
  echo "Scanning for subdomains with sublist3r..."
  subdomains=$(sublist3r -d $target)

  if [ -z "$subdomains" ]; then
    echo "No subdomains found"
  else
    echo "Subdomains found: $subdomains"
  fi
  echo "============================================="

  # Search for exploitable vulnerabilities with searchsploit
  echo "Searching for exploitable vulnerabilities with searchsploit..."
  searchsploit_output=$(searchsploit $vulnerabilities)
  exploits=$(echo "$searchsploit_output" | grep "/")

  if [ -z "$exploits" ]; then
    echo "No exploitable vulnerabilities found"
  else
    echo "Exploits found: $exploits"
  fi
  echo "============================================="
fi

# Select open port to scan with dirb
echo "Choose an open port to scan with dirb:"
PS3="Enter your choice: "
select port in $open_ports; do
  if [ -z "$port" ]; then
    echo "Invalid option. Please try again."
  else
    break
  fi
done
echo "============================================="

# Run dirb scan on the selected open port
echo "Running dirb scan on port $port..."
dirb_output=$(dirb http://$target:$port)
directories=$(echo "$dirb_output" | grep "==>" | awk '{print $NF}' | grep -v "(" | grep -v ")" | grep -v "=")

if [ -z "$directories" ]; then
echo "No directories found on port $port"
exit 1
fi

echo "Directories found: $directories"
echo "============================================="
echo "Choose a directory to scan with sqlmap:"
PS3="Enter your choice: "
select directory in $directories; do
if [ -z "$directory" ]; then
echo "Invalid option. Please try again."
else
break
fi
done
echo "============================================="
echo "Choose the intensity of sqlmap scan:"
PS3="Enter the number of your choice: "
options=("1) Low - Fast but less accurate" "2) Medium - Moderate speed and accuracy" "3) High - Slower but more accurate" "4) Very High - Slowest and most thorough")
select intensity in "${options[@]}"; do
case $intensity in
"1) Low - Fast but less accurate")
sqlmap_options="--risk=1 --level=2"
break;;
"2) Medium - Moderate speed and accuracy")
sqlmap_options="--risk=2 --level=3"
break;;
"3) High - Slower but more accurate")
sqlmap_options="--risk=3 --level=4"
break;;
"4) Very High - Slowest and most thorough")
sqlmap_options="--risk=4 --level=5"
break;;
*)
echo "Invalid option. Please try again.";;
esac
done
echo "============================================="
echo "Running sqlmap against $directory with intensity set to $intensity..."
sqlmap $sqlmap_options -u "http://$target:$port/$directory"
while true; do
read -p "Would you like to scan another directory? (y/n) " answer
case $answer in
[Yy]* )
echo "============================================="
echo "Re-running dirb scan on port $port..."
dirb_output=$(dirb http://$target:$port)
directories=$(echo "$dirb_output" | grep "==>" | awk '{print $NF}' | grep -v "(" | grep -v ")" | grep -v "=")
if [ -z "$directories" ]; then
echo "No directories found on port $port"
exit 1
fi
echo "Directories found: $directories"
echo "============================================="
echo "Choose a directory to scan with sqlmap:"
PS3="Enter your choice: "
select directory in $directories; do
if [ -z "$directory" ]; then
echo "Invalid option. Please try again."
else
break
fi
done
echo "============================================="
echo "Choose the intensity of sqlmap scan:"
PS3="Enter the number of your choice: "
select intensity in "${options[@]}"; do
case $intensity in
"1) Low - Fast but less accurate")
sqlmap_options="--risk=1 --level=2"
break;;
"2) Medium - Moderate speed and accuracy")
sqlmap_options="--risk=2 --level=3"
break;;
"3) High - Slower but more accurate")
sqlmap_options="--risk=3 --level=4"
break;;
"4) Very High - Slowest and most thorough")
sqlmap_options="--risk=4 --level=5"
break;;
*)
echo "Invalid option. Please try again."
;;
esac
done
echo "============================================="
echo "Running sqlmap against $directory with intensity set to $intensity..."
sqlmap $sqlmap_options -u "http://$target:$port/$directory"
echo "============================================="
read -p "Do you want to repeat the process with another target? [y/n]: " repeat
if [ "$repeat" == "n" ]; then
echo "Exiting Penetration Test. Goodbye!"
exit 0
elif [ "$repeat" == "y" ]; then
clear
exec "$0"
else
echo "Invalid option. Exiting Penetration Test. Goodbye!"
exit 1
fi
