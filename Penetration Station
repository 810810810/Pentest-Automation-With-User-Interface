#!/bin/bash

echo "============================================="
echo " Welcome to the Penetration Station "
echo "============================================="
echo "Enter the target to scan: "
read -r target
echo "============================================="

 # Run nmap scan on the target
echo "Scanning $target for open ports..."
nmap_output=$(nmap -p- --min-rate=1000 -T4 "$target")
open_ports=$(echo "$nmap_output" | grep "open" | cut -d '/' -f 1 | awk '{print $NF}' | tr '\n' ' ')

if [ -z "$open_ports" ]; then
echo "No open ports found on target"
exit 1
fi

echo "Open ports found: $open_ports"
echo "============================================="

# select scan type
echo "Select the type of scan to perform:"
PS3="Enter the number of your choice: "
options=("1) Basic - Only scan for open ports and directories" "2) Comprehensive - Scan for open ports, directories, and vulnerabilities")
select scan_type in "${options[@]}"; do
if [ -z "$scan_type" ]; then
echo "Invalid option. Please try again."
else
break
fi
done
echo "============================================="

if [ "$scan_type" == "2) Comprehensive - Scan for open ports, directories, and vulnerabilities" ]; then
 # Run vulnerability scan with Nessus
echo "Running vulnerability scan with Nessus..."
nessus_output=$(nessuscli scan --quiet --targets "$target" | sed -n '/Results summary/,/^\s*$/p' | tail -n +3)
vulnerabilities=$(echo "$nessus_output" | grep "High" | awk '{print $2}' | tr '\n' ' ')

if [ -z "$vulnerabilities" ]; then
echo "No vulnerabilities found"
else
echo "Vulnerabilities found: $vulnerabilities"
fi
echo "============================================="

 # Scan for subdomains with sublist3r
echo "Scanning for subdomains with sublist3r..."
subdomains=$(python3 /path/to/sublist3r.py -d "$target" -o - | sed 's/^[^-]*-//')

if [ -z "$subdomains" ]; then
echo "No subdomains found"
else
echo "Subdomains found: $subdomains"
fi
echo "============================================="

 # Search for exploitable vulnerabilities with searchsploit
echo "Searching for exploitable vulnerabilities with searchsploit..."
searchsploit_output=$(searchsploit -t $(echo "$vulnerabilities" | tr ' ' ','))

exploits=$(echo "$searchsploit_output" | grep "/")

if [ -z "$exploits" ]; then
echo "No exploitable vulnerabilities found"
else
echo "Exploits found: $exploits"
fi
echo "============================================="
fi

 # select open port to scan with dirb
echo "Choose an open port to scan with dirb:"
PS3="Enter your choice: "
select port in $open_ports; do
if [ -z "$port" ]; then
echo "Invalid option. Please try again."
else
break
fi
done
echo "============================================="

 # Run dirb scan on the selected open port
echo "Running dirb scan on port $port..."
dirb_output=$(dirb -o /dev/null "http://$target:$port")
directories=$(echo "$dirb_output" | grep "==>" | awk '{print $NF}' | grep -v "(CODE:" | grep -v "=")

if [ -z "$directories" ]; then
echo "No directories found on port $port"
exit 1
fi

echo "Directories found: $directories"
echo "============================================="
echo "Choose a directory to scan with sqlmap:"
read -r selected_directory

if ! [[ $directories =~ $selected_directory ]]; then
echo "Invalid directory selected"
exit 1
fi

echo "Scanning directory $selected_directory with sqlmap..."
sqlmap_output=$(sqlmap -u "http://$target:$port/$selected_directory" --batch)

if [[ $sqlmap_output == *"identified"* ]]; then
echo "SQL injection vulnerability found in directory $selected_directory"
echo "============================================="
echo "$sqlmap_output" | sed 's/\[WARNING\]//g'
else
echo "No SQL injection vulnerability found in directory $selected_directory"
fi

echo "Scan completed"
